% Input file for Dynamic David
%
% 2 important theorems (often declared axioms)
%

load "axioms.dd" unless Ax1

thm a -> -a -> b as Ax4
proof
  inst Ax1 with a=-a, b=-b
    obtain |- -a -> -b -> -a as #1
  pop from #1
    obtain -a |- -b -> -a as #2
  inst Ax3 with a=b, b=a
    obtain |- (-b -> -a) -> a -> b as #3
  mp #3 with #2
    obtain -a |- a -> b as #4
  pop from #4
    obtain -a, a |- b as #5
  push -a from #5
    obtain a |- -a -> b as #6
  push a from #6
    obtain |- a -> -a -> b as goal
end

thm -a -> a -> b as Ax4b
proof
  pop from Ax4
  pop from #1
  push a from #2
  push -a from #3 as goal
end

thm (-a -> a) -> a as Ax5
proof
  load "self.dd" unless self

  inst Ax2 with a=-a, b=a, c=-(a -> a)
    obtain  |- (-a -> a -> -(a -> a)) -> (-a -> a) -> -a -> -(a -> a) as A1

  inst Ax4b with b = -(a -> a)
    obtain  |- -a -> a -> -(a -> a) as A2

  mp A1 with A2
    obtain  |- (-a -> a) -> -a -> -(a -> a) as A3

  pop from A3
    obtain -a -> a |- -a -> -(a -> a) as A4

  inst Ax3 with b = a -> a
    obtain  |- (-a -> -(a -> a)) -> (a -> a) -> a as A5

  mp A5 with A4
    obtain -a -> a |- (a -> a) -> a as A6

  push a from self
    obtain |- a -> a as A7

  mp A6 with A7
    obtain -a -> a |- a as A8
    
  push -a -> a from A8
    obtain  |- (-a -> a) -> a as goal
end
